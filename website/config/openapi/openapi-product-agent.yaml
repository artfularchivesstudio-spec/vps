openapi: 3.1.0
info:
  title: Artful Archives Studio - Product Agent Actions API
  description: |
    Endpoints for product template generation and merchandise helpers. This API enables the creation of
    product templates from source images, allowing users to visualize their artwork on various merchandise.
    
    ## ChatGPT Integration Guide
    
    ### Workflow
    1. User uploads or selects an image they want to use for merchandise
    2. ChatGPT prompts for the desired product template type (phone case, canvas, etc.)
    3. API generates a visualization of the image applied to the selected product template
    4. User can approve or request modifications to the template
    
    ### Conversation Patterns
    
    **Example 1: Basic Product Template Generation**
    ```
    User: I'd like to see how my artwork would look on a phone case
    Assistant: I'd be happy to help with that! Could you upload the artwork image you'd like to use?
    User: [Uploads image]
    Assistant: Thanks for sharing your artwork! I'll generate a preview of how it would look on a phone case.
    [Calls API with templateType=phone_case and the uploaded imageUrl]
    Assistant: Here's a preview of your artwork on a phone case. What do you think?
    ```
    
    **Example 2: Multiple Product Options**
    ```
    User: I want to see my photo on different products
    Assistant: I can help you visualize your photo on various products! Please upload the photo you'd like to use.
    User: [Uploads image]
    Assistant: Great photo! What type of product would you like to see it on first? I can show you options like phone cases, canvas prints, mugs, or t-shirts.
    User: Let's try a canvas print
    Assistant: I'll generate a preview of your photo as a canvas print.
    [Calls API with templateType=canvas and the uploaded imageUrl]
    Assistant: Here's how your photo would look as a canvas print. Would you like to see it on any other products?
    ```
    
    ### Key Interaction Principles
    - Always request the image first before suggesting product types
    - Provide clear options for available template types
    - Allow users to iterate through multiple product options with the same image
    - Offer suggestions for image adjustments if the template generation reveals issues
  version: 1.0.0
  contact:
    name: Artful Archives Studio Support
    url: https://artfularchives.studio/support
    email: support@artfularchives.studio
servers:
  - url: https://tjkpliasdjpgunbhsiza.functions.supabase.co
    description: Production API Server
paths:
  /functions/v1/product-template:
    post:
      summary: Generate product template
      description: |
        Creates a visualization of how a provided image would appear on a specified product template.
        This endpoint helps users preview their artwork or photos on merchandise before purchase.
      operationId: generateProductTemplate
      x-openai-isConsequential: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateType
                - imageUrl
              properties:
                templateType:
                  type: string
                  description: Template to apply (phone_case, canvas, mug, tshirt, etc.)
                  example: "phone_case"
                imageUrl:
                  type: string
                  description: Source image URL (must be publicly accessible or a data URL)
                  example: "https://example.com/my-artwork.jpg"
            examples:
              phoneCase:
                summary: Phone case template request
                value:
                  templateType: "phone_case"
                  imageUrl: "https://example.com/my-artwork.jpg"
              canvas:
                summary: Canvas print template request
                value:
                  templateType: "canvas"
                  imageUrl: "https://example.com/my-photo.jpg"
      responses:
        "200":
          description: Template generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the template generation was successful
                    example: true
                  message:
                    type: string
                    description: Success message or additional information
                    example: "Template generated successfully"
                  templateUrl:
                    type: string
                    description: URL to the generated template visualization
                    example: "https://storage.artfularchives.studio/templates/12345.jpg"
              examples:
                successResponse:
                  summary: Successful template generation
                  value:
                    success: true
                    message: "Template generated successfully"
                    templateUrl: "https://storage.artfularchives.studio/templates/12345.jpg"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/ServerError'
components:
  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indicates the request failed due to authentication issues
                example: false
              error:
                type: string
                description: Error message explaining the authentication failure
                example: Unauthorized - Invalid or missing API key
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indicates the request failed due to server error
                example: false
              error:
                type: string
                description: Error message explaining the server failure
                example: Internal server error
