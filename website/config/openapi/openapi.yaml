openapi: 3.1.0
info:
  title: üé≠ Artful Archives Studio API
  description: |
    The mystical API gateway for our digital art gallery, orchestrating the symphony of content creation,
    audio generation, and multimedia management through Supabase Edge Functions.
  version: 1.0.0
  contact:
    name: The Spellbinding Museum Director
    email: curator@artfularchives.studio

servers:
  - url: https://tjkpliasdjpgunbhsiza.supabase.co/functions/v1
    description: Production Supabase Edge Functions
  - url: http://localhost:54321/functions/v1
    description: Local development

components:
  schemas:
    # üé≠ Error Response Schema
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
            - status
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: "AUDIO_JOB_ESCAPED"
            message:
              type: string
              description: Human-readable error message
              example: "The audio job has run away to join another circus"
            details:
              type: object
              description: Additional error context
            status:
              type: integer
              description: HTTP status code
              example: 500
            timestamp:
              type: string
              format: date-time
              description: When the error occurred
            requestId:
              type: string
              description: Request ID for debugging

    # üéµ Audio Job Schemas
    AudioJob:
      type: object
      required:
        - id
        - status
        - languages
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the audio job
        post_id:
          type: string
          format: uuid
          nullable: true
          description: Associated blog post ID
        input_text:
          type: string
          description: Original text content to convert to audio
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled]
          description: Current processing status
        languages:
          type: array
          items:
            type: string
          description: Target languages for audio generation
          example: ["en", "es", "hi"]
        language_statuses:
          type: object
          description: Detailed status for each language
          additionalProperties:
            type: object
            properties:
              status:
                type: string
                enum: [pending, processing, completed, failed]
              audio_url:
                type: string
                nullable: true
              error:
                type: string
                nullable: true
              completed_at:
                type: string
                format: date-time
                nullable: true
        audio_urls:
          type: object
          description: Generated audio URLs by language
          additionalProperties:
            type: string
          example:
            en: "https://storage.supabase.co/audio/en-job123.mp3"
            es: "https://storage.supabase.co/audio/es-job123.mp3"
        config:
          type: object
          description: Audio generation configuration
          properties:
            voice_id:
              type: string
              description: TTS voice identifier
            voice_gender:
              type: string
              enum: [male, female]
            personality:
              type: string
              enum: [art_dealer, art_instructor, hybrid]
            speed:
              type: number
              minimum: 0.5
              maximum: 2.0
            title:
              type: string
        is_draft:
          type: boolean
          description: Whether this is a draft/preview generation
        completed_languages:
          type: array
          items:
            type: string
          description: Languages that have been successfully processed
        current_language:
          type: string
          nullable: true
          description: Currently processing language
        translated_texts:
          type: object
          description: Cached translations by language
          additionalProperties:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AudioJobCreate:
      type: object
      required:
        - input_text
        - languages
      properties:
        input_text:
          type: string
          description: Text content to convert to audio
        post_id:
          type: string
          format: uuid
          nullable: true
        languages:
          type: array
          items:
            type: string
          minItems: 1
          description: Target languages for generation
        config:
          type: object
          properties:
            voice_id:
              type: string
            voice_gender:
              type: string
              enum: [male, female]
            personality:
              type: string
              enum: [art_dealer, art_instructor, hybrid]
            speed:
              type: number
              minimum: 0.5
              maximum: 2.0
            title:
              type: string
        is_draft:
          type: boolean
          default: false

    # üñºÔ∏è Media Asset Schemas
    MediaAsset:
      type: object
      required:
        - id
        - title
        - file_type
        - created_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          description: Human-readable title
        file_url:
          type: string
          format: uri
          description: Public URL to access the file
        file_type:
          type: string
          enum: [image, audio, video, document]
        mime_type:
          type: string
          description: MIME type of the file
        file_size_bytes:
          type: integer
          description: File size in bytes
        related_post_id:
          type: string
          format: uuid
          nullable: true
        generation_metadata:
          type: object
          description: AI generation metadata
          properties:
            type:
              type: string
              enum: [tts, image_analysis, upload]
            language:
              type: string
              nullable: true
            generated_at:
              type: string
              format: date-time
            model:
              type: string
        status:
          type: string
          enum: [uploading, processing, ready, failed]
          default: ready
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    MediaAssetCreate:
      type: object
      required:
        - title
        - file_type
        - file_data
      properties:
        title:
          type: string
        file_type:
          type: string
          enum: [image, audio, video, document]
        file_data:
          type: string
          format: binary
          description: Base64 encoded file data
        mime_type:
          type: string
        related_post_id:
          type: string
          format: uuid
          nullable: true
        generation_metadata:
          type: object

    # üìù Blog Post Schemas
    BlogPost:
      type: object
      required:
        - id
        - title
        - slug
        - created_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        slug:
          type: string
        content:
          type: string
          description: Main content in English
        excerpt:
          type: string
        featured_image_url:
          type: string
          format: uri
          nullable: true
        published_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [draft, published, archived]
        author_id:
          type: string
          format: uuid
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
        audio_assets_by_language:
          type: object
          description: Audio assets organized by language
          additionalProperties:
            type: object
            properties:
              id:
                type: string
                format: uuid
              url:
                type: string
                format: uri
              duration_seconds:
                type: number
                nullable: true
        primary_audio_id:
          type: string
          format: uuid
          nullable: true
        template_type:
          type: string
          nullable: true
        seo_metadata:
          type: object
        reading_time:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    BlogPostCreate:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
        content:
          type: string
        excerpt:
          type: string
        featured_image_url:
          type: string
          format: uri
        published_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [draft, published, archived]
          default: draft
        author_id:
          type: string
          format: uuid
        category_ids:
          type: array
          items:
            type: string
            format: uuid
        tag_ids:
          type: array
          items:
            type: string
            format: uuid
        template_type:
          type: string
        seo_metadata:
          type: object

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Supabase service role key for Edge Function authentication

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

security:
  - BearerAuth: []

paths:
  # üéµ Audio Jobs API
  /audio-jobs:
    get:
      summary: List audio jobs
      description: Retrieve a paginated list of audio jobs with optional filtering
      parameters:
        - name: post_id
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by associated post ID
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, processing, completed, failed, cancelled]
          description: Filter by job status
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AudioJob'
                  count:
                    type: integer
                  has_more:
                    type: boolean
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create audio job
      description: Initiate a new audio generation job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioJobCreate'
      responses:
        '201':
          description: Audio job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /audio-jobs/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Audio job ID

    get:
      summary: Get audio job
      description: Retrieve detailed information about a specific audio job
      responses:
        '200':
          description: Audio job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioJob'
        '404':
          description: Audio job not found
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update audio job
      description: Update audio job configuration or status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [cancelled]
                config:
                  type: object
      responses:
        '200':
          description: Audio job updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Audio job not found
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete audio job
      description: Remove an audio job and its associated data
      responses:
        '204':
          description: Audio job deleted
        '404':
          description: Audio job not found
        '500':
          $ref: '#/components/responses/InternalError'

  /audio-jobs/{id}/process:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    post:
      summary: Process audio job
      description: Start or resume processing of an audio job
      responses:
        '202':
          description: Processing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_id:
                    type: string
                    format: uuid
        '404':
          description: Audio job not found
        '409':
          description: Job already processing
        '500':
          $ref: '#/components/responses/InternalError'

  /audio-jobs/{id}/cancel:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    post:
      summary: Cancel audio job
      description: Cancel a pending or processing audio job
      responses:
        '200':
          description: Job cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioJob'
        '404':
          description: Audio job not found
        '409':
          description: Cannot cancel completed job
        '500':
          $ref: '#/components/responses/InternalError'

  # üñºÔ∏è Media Assets API
  /media-assets:
    get:
      summary: List media assets
      description: Retrieve paginated list of media assets
      parameters:
        - name: file_type
          in: query
          schema:
            type: string
            enum: [image, audio, video, document]
        - name: related_post_id
          in: query
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            type: string
            enum: [uploading, processing, ready, failed]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Media assets list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MediaAsset'
                  count:
                    type: integer
                  has_more:
                    type: boolean
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create media asset
      description: Upload and create a new media asset
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaAssetCreate'
      responses:
        '201':
          description: Media asset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /media-assets/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get media asset
      description: Retrieve media asset details
      responses:
        '200':
          description: Media asset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
        '404':
          description: Media asset not found
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update media asset
      description: Update media asset metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                related_post_id:
                  type: string
                  format: uuid
                  nullable: true
      responses:
        '200':
          description: Media asset updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Media asset not found
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete media asset
      description: Remove media asset and associated file
      responses:
        '204':
          description: Media asset deleted
        '404':
          description: Media asset not found
        '500':
          $ref: '#/components/responses/InternalError'

  # üìù Posts API
  /posts:
    get:
      summary: List blog posts
      description: Retrieve paginated list of blog posts
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, published, archived]
        - name: author_id
          in: query
          schema:
            type: string
            format: uuid
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: tag_id
          in: query
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          schema:
            type: string
          description: Search in title and content
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Blog posts list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BlogPost'
                  count:
                    type: integer
                  has_more:
                    type: boolean
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create blog post
      description: Create a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPostCreate'
      responses:
        '201':
          description: Blog post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /posts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get blog post
      description: Retrieve detailed blog post information
      responses:
        '200':
          description: Blog post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '404':
          description: Blog post not found
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update blog post
      description: Update blog post content and metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                excerpt:
                  type: string
                featured_image_url:
                  type: string
                  format: uri
                published_at:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum: [draft, published, archived]
                category_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                tag_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                template_type:
                  type: string
                seo_metadata:
                  type: object
      responses:
        '200':
          description: Blog post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Blog post not found
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete blog post
      description: Remove blog post and associated data
      responses:
        '204':
          description: Blog post deleted
        '404':
          description: Blog post not found
        '500':
          $ref: '#/components/responses/InternalError'

  /posts/{id}/audio-assets:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get post audio assets
      description: Retrieve all audio assets associated with a blog post
      responses:
        '200':
          description: Audio assets for the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MediaAsset'
                  primary_audio_id:
                    type: string
                    format: uuid
                    nullable: true
        '404':
          description: Blog post not found
        '500':
          $ref: '#/components/responses/InternalError'

  /posts/{id}/primary-audio:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    put:
      summary: Set primary audio
      description: Set the primary audio asset for a blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - audio_asset_id
              properties:
                audio_asset_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Primary audio updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Blog post or audio asset not found
        '500':
          $ref: '#/components/responses/InternalError'

  # üìä Health Check
  /health:
    get:
      summary: Health check
      description: Check API health and connectivity
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"
